<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://flightvin.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://flightvin.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-12-30T17:16:45+00:00</updated><id>https://flightvin.github.io/feed.xml</id><title type="html">blank</title><subtitle>Vineeth&apos;s webpage. </subtitle><entry><title type="html">A project on the GFS</title><link href="https://flightvin.github.io/blog/2024/a-project-on-the-gfs/" rel="alternate" type="text/html" title="A project on the GFS"/><published>2024-12-29T20:56:00+00:00</published><updated>2024-12-29T20:56:00+00:00</updated><id>https://flightvin.github.io/blog/2024/a-project-on-the-gfs</id><content type="html" xml:base="https://flightvin.github.io/blog/2024/a-project-on-the-gfs/"><![CDATA[<p>Essentially, I, along with a collaborator, did the following -</p> <ol> <li><strong>Localized Implementation:</strong> Implemented pretty much everything that’s offered by the GFS inclusing <ol> <li>Write</li> <li>Read</li> <li>Replication</li> <li>Record Append</li> <li>Re-Replication</li> <li>Stale Replica Handling</li> <li>Garbage Collection</li> <li>Operation Log</li> <li>Data Integrity</li> </ol> </li> </ol> <p>using a codebase of 7200 LOC in Go. Evidently, we missed out on snapshoting and directory management and have left them as to-dos.</p> <ol> <li> <p><strong>Enhanced Consistency:</strong> Rather than the at-least once record append operations offered by the GFS, we implemented it to be exactly once. This was done using a modified version of the 2PC protocol and handling idempotency (do see our report!).</p> </li> <li> <p><strong>Comprehensive System Analysis:</strong> Validated system performance through extensive benchmarking, demonstrating near-linear scaling in throughput for reads, writes, and appends, while maintaining consistency and reliability.</p> </li> </ol> <p>The implementation could be found <a href="https://github.com/reimagining-gfs/main-repo">here</a> and thr report <a href="https://github.com/reimagining-gfs/main-repo/blob/main/report.pdf">here</a>.</p>]]></content><author><name></name></author><category term="software"/><category term="IIIT"/><category term="systems"/><summary type="html"><![CDATA[Adding exactly-once record append semantics to the Google File System]]></summary></entry><entry><title type="html">Trying to Teach Freshmen Robotics</title><link href="https://flightvin.github.io/blog/2024/trying-to-teach-freshmen-robotics/" rel="alternate" type="text/html" title="Trying to Teach Freshmen Robotics"/><published>2024-12-25T16:40:16+00:00</published><updated>2024-12-25T16:40:16+00:00</updated><id>https://flightvin.github.io/blog/2024/trying-to-teach-freshmen-robotics</id><content type="html" xml:base="https://flightvin.github.io/blog/2024/trying-to-teach-freshmen-robotics/"><![CDATA[<h1 id="introduction">Introduction</h1> <p>I recently undertook the task of introducing freshmen to robotics. I’ll keep updating this as they progress.</p> <p>The following is a summary of my conversations via text using an LLM.</p> <h2 id="phase-1-getting-started">Phase 1: Getting Started</h2> <h3 id="introductory-topics">Introductory Topics:</h3> <ol> <li><strong>An Introduction to Abstraction</strong> (<a href="https://www.lesswrong.com/posts/CHSBRLWY5bzZdchFF/a-thorough-introduction-to-abstraction">Link</a>)</li> <li><strong>Writing Modular Code</strong> (<a href="https://best-practice-and-impact.github.io/qa-of-code-guidance/modular_code.html">Link</a>)</li> <li><strong>Python for Research</strong> (<a href="https://rits.github-pages.ucl.ac.uk/doctoral-programming-intro/">Link</a>) - Skim the headings to ensure you know the general concepts.</li> </ol> <p><strong>Estimated Time:</strong> 1-2 days</p> <h3 id="dual-boot-and-ros-installation">Dual Boot and ROS Installation:</h3> <ol> <li>Set up dual boot with <strong>Ubuntu 20.04</strong> (make sure the version matches).</li> <li>Install ROS following the instructions for <a href="https://wiki.ros.org/noetic/Installation/Ubuntu"><strong>Noetic</strong></a>. <ul> <li>If you’re adventurous, try Zorin OS. Its installation is similar to Ubuntu.</li> </ul> </li> <li>For a modern approach, consider <strong>Docker</strong>. While dual booting is recommended for ROS, Docker is a valuable and intriguing tool worth exploring. <ul> <li>Helpful Resources: <ul> <li><a href="https://roboticseabass.com/2021/04/21/docker-and-ros/">Link 1</a></li> <li><a href="https://www.reddit.com/r/ROS/comments/19d3fgk/running_ros_in_docker_pros_and_cons/">Link 2</a></li> </ul> </li> </ul> </li> </ol> <p><strong>Estimated Time:</strong> 1 day</p> <h4 id="alternatives-to-dual-boot">Alternatives to Dual Boot:</h4> <ul> <li>Use a Virtual Machine (VM) as per <a href="https://answers.ros.org/question/355252/can-ros-run-smoothly-on-vm/">this discussion</a>.</li> <li>Avoid WSL as it may not fully support ROS.</li> </ul> <h2 id="phase-2-starting-off-with-ros">Phase 2: Starting Off with ROS</h2> <h3 id="fundamental-introduction">Fundamental Introduction:</h3> <ol> <li>Navigate to <a href="https://app.theconstruct.ai/courses/">The Construct</a> and find the “<strong>ROS Basics in 5 Days</strong>” course (choose either C++ or Python). <ul> <li>Note: This course isn’t entirely free, but you can access some content for free. It should take about 2 hours.</li> </ul> </li> </ol> <h3 id="exploring-the-documentation">Exploring the Documentation:</h3> <ol> <li>Familiarize yourself with the official <a href="https://wiki.ros.org/noetic">ROS Noetic documentation</a>.</li> <li>Read: <ul> <li><a href="https://wiki.ros.org/ROS/Introduction">Introduction to ROS</a></li> <li><a href="https://wiki.ros.org/ROS/Tutorials">Beginner Tutorials</a>: Complete “<strong>1.1 Beginner Level</strong>” and up to “<strong>5 Defining Custom Messages</strong>” in the “1.2 Intermediate Level” section.</li> </ul> </li> </ol> <h3 id="key-focus-areas">Key Focus Areas:</h3> <ul> <li>Topics</li> <li>Services</li> <li>Visualization tools (e.g., RViz)</li> </ul> <h2 id="phase-3-exploring-gazebo">Phase 3: Exploring Gazebo</h2> <ol> <li>Install and read about Gazebo from the <a href="https://classic.gazebosim.org/tutorials?cat=guided_b&amp;tut=guided_b1">Guided B Tutorials</a>.</li> <li>From the <a href="https://classic.gazebosim.org/tutorials?cat=get_started">Getting Started page</a>, explore: <ul> <li>Quick Start</li> <li>Gazebo Components</li> <li>Gazebo Architecture</li> </ul> </li> <li>Build a robot model (<a href="https://classic.gazebosim.org/tutorials?tut=build_robot&amp;cat=build_robot">Tutorial</a>)</li> <li>Add a sensor to the robot (<a href="https://classic.gazebosim.org/tutorials?tut=add_laser&amp;cat=build_robot">Tutorial</a>)</li> <li>Attempt this project: <a href="https://www.youtube.com/watch?v=594Gmkdo-_s">YouTube Tutorial</a> <ul> <li>Use LLMs (e.g., Perplexity) to convert ROS2 commands to ROS-compatible ones.</li> <li>Download project files from the video description.</li> </ul> </li> </ol> <h2 id="phase-4-introducing-machine-learning">Phase 4: Introducing Machine Learning</h2> <h3 id="essential-reading">Essential Reading:</h3> <ol> <li><a href="https://www.lesswrong.com/posts/qE73pqxAZmeACsAdF/a-short-introduction-to-machine-learning">A Short Introduction to Machine Learning</a> <ul> <li>I highly recommend this, given my affinity for LessWrong’s content.</li> </ul> </li> <li><a href="https://mml-book.github.io/">Mathematics for Machine Learning</a> <ul> <li>Quickly review the linear algebra sections before diving into the rest of the book.</li> </ul> </li> </ol> <p><strong>Estimated Time:</strong></p> <ul> <li>Brief review: 2-3 days</li> <li>In-depth study: 2 weeks (2 hours daily)</li> </ul> <h3 id="next-steps">Next Steps:</h3> <p>Once you’ve completed this, reach out to begin with PyTorch. This book forms the foundation for understanding ML, so take it seriously.</p> <p>And then, I’ll get them started off on computer vision and mobile robotics.</p>]]></content><author><name></name></author><category term="robotics"/><category term="IIIT"/><category term="robotics"/><summary type="html"><![CDATA[My introduction to robotics for a few undergrad freshmen]]></summary></entry></feed>